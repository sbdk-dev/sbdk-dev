[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sbdk-dev"
version = "1.0.1"
description = "ðŸš€ SBDK.dev - Local-first data pipeline sandbox toolkit"
readme = "README.md"
license = "MIT"
authors = [
    {name = "SBDK.dev Team", email = "hello@sbdk.dev"}
]
maintainers = [
    {name = "SBDK.dev Team", email = "hello@sbdk.dev"}
]
keywords = [
    "data-pipeline", 
    "duckdb", 
    "dbt", 
    "dlt", 
    "etl", 
    "local-first", 
    "development-tools",
    "analytics",
    "data-engineering"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Typing :: Typed"
]
requires-python = ">=3.9"
dependencies = [
    "typer>=0.12.0",
    "rich>=13.7.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "duckdb>=0.9.0",
    "pandas>=2.1.0",
    "faker>=20.1.0",
    "dbt-core>=1.7.0",
    "dbt-duckdb>=1.7.0",
    "dynaconf>=3.2.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "watchdog>=3.0.0",
    "dlt[duckdb]>=0.4.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "coverage>=7.3.0"
]

[project.urls]
Homepage = "https://sbdk.dev"
Documentation = "https://docs.sbdk.dev"
Repository = "https://github.com/sbdk-dev/sbdk"
"Bug Tracker" = "https://github.com/sbdk-dev/sbdk/issues"
Changelog = "https://github.com/sbdk-dev/sbdk/blob/main/CHANGELOG.md"

[project.scripts]
sbdk = "sbdk.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["sbdk*"]
exclude = ["tests*", "docs*", "demo_project*"]

[tool.setuptools.package-data]
sbdk = [
    "templates/**/*",
    "templates/**/**/*",
    "*.yml",
    "*.yaml", 
    "*.json",
    "*.sql"
]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff linting configuration
[tool.ruff]
target-version = "py39"
line-length = 88
[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy type checking configuration
[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dbt.*",
    "dlt.*",
    "duckdb.*",
    "faker.*",
    "watchdog.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance benchmarks"
]

# Coverage configuration
[tool.coverage.run]
source = ["sbdk"]
omit = [
    "*/tests/*",
    "*/demo_project/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
